{"version":3,"sources":["../src/ReducerRegistry.js"],"names":["ReducerRegistry","constructor","initialReducers","_reducers","_emitChange","register","newReducers","getReducers","setChangeListener","listener","Error"],"mappings":";;;;;;;;;;;;AAAA,MAAMA,eAAN,CAAsB;AACpBC,cAAYC,kBAAkB,EAA9B,EAAkC;AAChC,SAAKC,SAAL,8BAAsBD,eAAtB;AACA,SAAKE,WAAL,GAAmB,IAAnB;AACD;AACDC,WAASC,WAAT,EAAsB;AACpB,SAAKH,SAAL,8BAAqB,KAAKA,SAA1B,EAAwCG,WAAxC;;AAEA,QAAI,KAAKF,WAAL,KAAqB,IAAzB,EAA+B;AAC7B,WAAKA,WAAL,CAAiB,KAAKG,WAAL,EAAjB;AACD;AACF;AACDA,gBAAc;AACZ,sCAAW,KAAKJ,SAAhB;AACD;AACDK,oBAAkBC,QAAlB,EAA4B;AAC1B,QAAI,KAAKL,WAAL,KAAqB,IAAzB,EAA+B;AAC7B,YAAM,IAAIM,KAAJ,CAAU,uDAAV,CAAN;AACD;;AAED,SAAKN,WAAL,GAAmBK,QAAnB;AACD;AArBmB;;kBAwBPT,e","file":"ReducerRegistry.js","sourcesContent":["class ReducerRegistry {\n  constructor(initialReducers = {}) {\n    this._reducers = { ...initialReducers };\n    this._emitChange = null;\n  }\n  register(newReducers) {\n    this._reducers = {...this._reducers, ...newReducers};\n\n    if (this._emitChange !== null) {\n      this._emitChange(this.getReducers());\n    }\n  }\n  getReducers() {\n    return {...this._reducers};\n  }\n  setChangeListener(listener) {\n    if (this._emitChange !== null) {\n      throw new Error('Can only set the listener for a ReducerRegistry once.');\n    }\n\n    this._emitChange = listener;\n  }\n}\n\nexport default ReducerRegistry;\n"]}